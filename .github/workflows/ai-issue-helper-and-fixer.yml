name: AI Issue Helper and fixer

on:
  issues:
    types: [opened, edited]

jobs:
  ai_full_power_patch:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Auto-close typo-only issues
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const title = context.payload.issue.title.toLowerCase();
          const body = context.payload.issue.body.toLowerCase();
          const typoWords = ["typo", "misspell", "grammar", "spelling"];

          if (typoWords.some(word => title.includes(word) || body.includes(word))) {
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: "üëã Thanks for spotting a typo! We've logged it. Closing this to keep issues clean."
            });

            await github.rest.issues.update({
              ...context.repo,
              issue_number: context.issue.number,
              state: "closed"
            });

            console.log("Typo-only issue detected and closed.");
            process.exit(0);
          }

    - name: Generate AI Patch
      id: aipatch
      run: |
        ISSUE_BODY=$(jq -r .issue.body "$GITHUB_EVENT_PATH")
        ISSUE_TITLE=$(jq -r .issue.title "$GITHUB_EVENT_PATH")

        echo "Requesting patch from Pollinations AI..."

        RESPONSE=$(curl -s -X POST "https://text.pollinations.ai/openai" \
          -H "Content-Type: application/json" \
          -d "{\"prompt\": \"You are a senior developer. Given this GitHub issue, generate a unified diff patch ready to apply. ONLY output the raw diff starting with 'diff --git'.\\n\\nISSUE TITLE: '${ISSUE_TITLE}'\\nISSUE BODY: '${ISSUE_BODY}'\", \"temperature\": 0.2}")

        CLEAN_RESPONSE=$(echo "$RESPONSE" | jq -r '.choices[0].text')
        echo "$CLEAN_RESPONSE" > ai-fix.patch

    - name: Try Applying Patch
      id: applypatch
      run: |
        echo "Trying patch..."
        patch -p1 < ai-fix.patch && echo "PATCH_SUCCESS=true" >> $GITHUB_ENV || echo "PATCH_SUCCESS=false" >> $GITHUB_ENV

    - name: Try Applying with git apply if patch failed
      if: env.PATCH_SUCCESS == 'false'
      run: |
        echo "Trying git apply as fallback..."
        git apply ai-fix.patch && echo "PATCH_SUCCESS=true" >> $GITHUB_ENV || echo "PATCH_SUCCESS=false" >> $GITHUB_ENV

    - name: Create Branch, Commit Changes
      if: env.PATCH_SUCCESS == 'true'
      run: |
        ISSUE_NUMBER=$(jq -r .issue.number "$GITHUB_EVENT_PATH")
        BRANCH_NAME="ai-fix-${ISSUE_NUMBER}"

        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        git checkout -b "$BRANCH_NAME"

        git add -A
        git commit -m "ü§ñ AI autofix for Issue #${ISSUE_NUMBER}"
        git push origin "$BRANCH_NAME"

    - name: Create Pull Request for Patch Success
      if: env.PATCH_SUCCESS == 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const issueNumber = context.issue.number;
          const branchName = `ai-fix-${issueNumber}`;
          const title = `ü§ñ AI AutoFix for Issue #${issueNumber}`;
          const body = `This pull request was automatically created by an AI based on Issue #${issueNumber}. Please review carefully!`;

          const { data: pr } = await github.rest.pulls.create({
            ...context.repo,
            head: branchName,
            base: "main",
            title,
            body
          });

          await github.rest.issues.addLabels({
            ...context.repo,
            issue_number: pr.number,
            labels: ["ai-generated", "needs-review"]
          });

          await github.rest.pulls.requestReviewers({
            ...context.repo,
            pull_number: pr.number,
            reviewers: ["CloudCompile"]
          });

    - name: Create PR with Suggestion if Patch Failed
      if: env.PATCH_SUCCESS == 'false'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const issueNumber = context.issue.number;
          const aiDiff = require('fs').readFileSync('ai-fix.patch', 'utf8');
          const title = `üõ†Ô∏è AI Suggestion for Issue #${issueNumber} (Manual Review Needed)`;
          const body = `AI tried to generate a patch for Issue #${issueNumber} but could not apply it cleanly.\n\nHere's the suggestion:\n\n\`\`\`diff\n${aiDiff}\n\`\`\``;

          const { data: pr } = await github.rest.pulls.create({
            ...context.repo,
            head: "main",
            base: "main",
            title,
            body
          });

          await github.rest.issues.addLabels({
            ...context.repo,
            issue_number: pr.number,
            labels: ["ai-suggestion", "needs-human-help"]
          });

